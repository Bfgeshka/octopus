diff -rc3 a/dwm.c b/dwm.c
*** a/dwm.c	2013-08-15 13:31:16.130000000 +0400
--- b/dwm.c	2013-08-15 13:33:59.050000000 +0400
***************
*** 134,139 ****
--- 134,140 ----
  	GC gc;
  
  	XftColor  colors[MAXCOLORS][ColLast];
+   XftColor  plcolors[6][ColLast];
  	XftDraw  *xftdrawable;
  
  	PangoContext *pgc;
***************
*** 232,238 ****
  static void drawbar(Monitor *m);
  static void drawbars(void);
  static void drawcoloredtext(char *text);
- static void drawsquare(Bool filled, Bool empty, XftColor col[ColLast]);
  static void drawtext(const char *text, XftColor col[ColLast], Bool pad);
  static void enternotify(XEvent *e);
  static void expose(XEvent *e);
--- 233,238 ----
***************
*** 867,872 ****
--- 867,873 ----
  	char clock[38];
  	unsigned int i, occ = 0, urg = 0;
  	XftColor *col;
+ 	const char *sym;
  	Client *c;
  
  	resizebarwin(m);
***************
*** 878,897 ****
  	dc.x = 0;
  	for(i = 0; i < LENGTH(tags); i++) {
  		dc.w = TEXTW(tags[i].name);
! 		col = dc.colors[(m->tagset[m->seltags] & 1 << i) ? 1 : (urg & 1 << i ? 2 : 0)];
  		drawtext(tags[i].name, col, True);
! 		drawsquare(m == selmon && selmon->sel && selmon->sel->tags & 1 << i, occ & 1 << i, col);
  		dc.x += dc.w;
  	}
  	dc.w = blw = TEXTW(m->ltsymbol);
! 	drawtext(m->ltsymbol, dc.colors[0], False);
  	dc.x += dc.w;
  	x = dc.x;
  	if(m == selmon) { /* status is only drawn on selected monitor */
  		dc.w = textnw(stext, strlen(stext));
  		dc.x = m->ww - dc.w;
! 		if(showsystray && m == selmon)
  			dc.x -= getsystraywidth();
  		if(dc.x < x) {
  			dc.x = x;
  			dc.w = m->ww - x;
--- 879,917 ----
  	dc.x = 0;
  	for(i = 0; i < LENGTH(tags); i++) {
  		dc.w = TEXTW(tags[i].name);
! 		col = dc.colors[(m->tagset[m->seltags] & 1 << i) ? 1 : (urg & 1 << i ? 2 : (occ & 1 << i ? 3 : 0))];
  		drawtext(tags[i].name, col, True);
! 		dc.x += dc.w;
! 
! 		if(i == LENGTH(tags) - 1) {
! 			sym = plclosedsym;
! 			col = dc.plcolors[m->tagset[m->seltags] & 1 << i ? 4 : 3];
! 		}
! 		else {
! 			sym = !(m->tagset[m->seltags] & 1 << i) ^ !(m->tagset[m->seltags] & 1 << (i + 1)) ? plclosedsym : plopensym;
! 			col = dc.plcolors[m->tagset[m->seltags] & 1 << (i + 1) ? 1 : m->tagset[m->seltags] & 1 << i ? 2 : 0];
! 		}
! 		dc.w = textnw(sym, strlen(sym));
! 		drawtext(sym, col, False);
  		dc.x += dc.w;
  	}
  	dc.w = blw = TEXTW(m->ltsymbol);
! 	drawtext(m->ltsymbol, dc.colors[4], True);
! 	dc.x += dc.w;
! 	dc.w = textnw(plopensym, strlen(plopensym));
! 	drawtext(plopensym, dc.plcolors[3], False);
  	dc.x += dc.w;
  	x = dc.x;
  	if(m == selmon) { /* status is only drawn on selected monitor */
  		dc.w = textnw(stext, strlen(stext));
  		dc.x = m->ww - dc.w;
! 		if(showsystray && m == selmon) {
  			dc.x -= getsystraywidth();
+ 			if(getsystraywidth() != 1)
+ 				dc.x -= textnw(plsystraysym, strlen(plsystraysym));
+ 			else
+ 				dc.x--;
+ 		}
  		if(dc.x < x) {
  			dc.x = x;
  			dc.w = m->ww - x;
***************
*** 905,914 ****
  		strftime(clock, 38, clock_fmt, localtime(&current));
  		clockw = TEXTW(clock);
  		dc.x = x;
! 		drawtext(NULL, dc.colors[0], False);
  		dc.w = MIN(dc.w, clockw);
  		dc.x = MAX(dc.x, (m->mw / 2) - (clockw / 2));
! 		drawtext(clock, dc.colors[1], False);
  	}
  	XCopyArea(dpy, dc.drawable, m->barwin, dc.gc, 0, 0, m->ww, bh, 0, 0);
  	XSync(dpy, False);
--- 925,938 ----
  		strftime(clock, 38, clock_fmt, localtime(&current));
  		clockw = TEXTW(clock);
  		dc.x = x;
! 		drawtext(NULL, dc.colors[4], False);
  		dc.w = MIN(dc.w, clockw);
  		dc.x = MAX(dc.x, (m->mw / 2) - (clockw / 2));
! 		drawtext(clock, dc.colors[5], False);
! 	}
! 	if(getsystraywidth() != 1) {
! 		dc.x = m->ww - getsystraywidth() - textnw(plsystraysym, strlen(plsystraysym));
! 		drawtext(plsystraysym, dc.plcolors[5], False);
  	}
  	XCopyArea(dpy, dc.drawable, m->barwin, dc.gc, 0, 0, m->ww, bh, 0, 0);
  	XSync(dpy, False);
***************
*** 949,966 ****
  }
  
  void
- drawsquare(Bool filled, Bool empty, XftColor col[ColLast]) {
- 	int x;
- 
- 	XSetForeground(dpy, dc.gc, col[ColFG].pixel);
- 	x = (dc.font.ascent + dc.font.descent + 2) / 4;
- 	if(filled)
- 		XFillRectangle(dpy, dc.drawable, dc.gc, dc.x+1, dc.y+1, x+1, x+1);
- 	else if(empty)
- 		XDrawRectangle(dpy, dc.drawable, dc.gc, dc.x+1, dc.y+1, x, x);
- }
- 
- void
  drawtext(const char *text, XftColor col[ColLast], Bool pad) {
  	char buf[256];
  	int i, x, y, h, len, olen;
--- 973,978 ----
***************
*** 1842,1848 ****
  	initfont(font);
  	sw = DisplayWidth(dpy, screen);
  	sh = DisplayHeight(dpy, screen);
! 	bh = dc.h = dc.font.height + 2;
  	updategeom();
  	/* init atoms */
  	wmatom[WMProtocols] = XInternAtom(dpy, "WM_PROTOCOLS", False);
--- 1854,1860 ----
  	initfont(font);
  	sw = DisplayWidth(dpy, screen);
  	sh = DisplayHeight(dpy, screen);
! 	bh = dc.h = dc.font.height;
  	updategeom();
  	/* init atoms */
  	wmatom[WMProtocols] = XInternAtom(dpy, "WM_PROTOCOLS", False);
***************
*** 1873,1878 ****
--- 1885,1901 ----
      dc.colors[i][ColFG] = getcolor(colors[i][ColFG]);
      dc.colors[i][ColBG] = getcolor(colors[i][ColBG]);
    }
+   dc.plcolors[0][ColBorder] = getcolor(colors[0][ColBorder]);
+   dc.plcolors[0][ColFG] = getcolor(colors[0][ColFG]);
+   dc.plcolors[0][ColBG] = getcolor(colors[0][ColBG]);
+   int fg[5] = {0, 1, 3, 1, 6};
+   int bg[5] = {1, 0, 4, 4, 10};
+   for(int i = 0; i < 5; i++) {
+     dc.plcolors[i+1][ColBorder] = getcolor(colors[0][ColBorder]);
+     dc.plcolors[i+1][ColFG] = getcolor(colors[fg[i]][ColBG]);
+     dc.plcolors[i+1][ColBG] = getcolor(colors[bg[i]][ColBG]);
+   }
+ 
  
  	dc.drawable = XCreatePixmap(dpy, root, DisplayWidth(dpy, screen), bh, DefaultDepth(dpy, screen));
  	dc.gc = XCreateGC(dpy, root, 0, NULL);
***************
*** 2425,2431 ****
  		wa.event_mask	     = ButtonPressMask | ExposureMask;
  		wa.override_redirect = True;
  		wa.background_pixmap = ParentRelative;
! 		wa.background_pixel  = dc.colors[0][ColBG].pixel;
  		XSelectInput(dpy, systray->win, SubstructureNotifyMask);
  		XChangeProperty(dpy, systray->win, netatom[NetSystemTrayOrientation], XA_CARDINAL, 32,
  				PropModeReplace, (unsigned char *)&systrayorientation, 1);
--- 2448,2454 ----
  		wa.event_mask	     = ButtonPressMask | ExposureMask;
  		wa.override_redirect = True;
  		wa.background_pixmap = ParentRelative;
! 		wa.background_pixel  = dc.colors[6][ColBG].pixel;
  		XSelectInput(dpy, systray->win, SubstructureNotifyMask);
  		XChangeProperty(dpy, systray->win, netatom[NetSystemTrayOrientation], XA_CARDINAL, 32,
  				PropModeReplace, (unsigned char *)&systrayorientation, 1);
***************
*** 2453,2458 ****
--- 2476,2488 ----
  	}
  	w = w ? w + systrayspacing : 1;
  	x -= w;
+ 
+ 	if(w != 1)
+ 		wa.background_pixel = dc.colors[6][ColBG].pixel;
+ 	else
+ 		wa.background_pixel = dc.colors[0][ColBG].pixel;
+ 	XChangeWindowAttributes(dpy, systray->win, CWBackPixel, &wa);
+ 
  	XMoveResizeWindow(dpy, systray->win, x, selmon->by, w, bh);
  	XSync(dpy, False);
  }
